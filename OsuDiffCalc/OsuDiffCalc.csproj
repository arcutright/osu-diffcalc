<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<RootNamespace>OsuDiffCalc</RootNamespace>
		<AssemblyName>OsuDiffCalc</AssemblyName>
		<ProductName>OsuDiffCalc</ProductName>
		<Description>Alternate difficulty calculator for osu!</Description>
		<Title>$(ProductName)</Title>
		<Copyright>Copyright $([System.DateTime]::Now.ToString('yyyy')) github.com/arcutright</Copyright>
		<Company></Company>

		<Version>1.2.0</Version>
		<AssemblyVersion>$(Version)</AssemblyVersion>
		<FileVersion>$(Version)</FileVersion>

		<!--
		Tested on net46;net47;net48;net6.0-windows; net7.0-windows (with WinFormsComInterop and trimming disabled)
		<TargetFrameworks>net46;net47;net48;net6.0-windows</TargetFrameworks>
		-->
		<TargetFrameworks>net48;net6.0-windows</TargetFrameworks>
		<OutputType>Exe</OutputType>
		<LangVersion>10.0</LangVersion>
		<Nullable>warnings</Nullable>
		<DisableImplicitNamespaceImports>true</DisableImplicitNamespaceImports>
		<ImplicitUsings>disable</ImplicitUsings>
		
		<!-- 
		TODO: form size (width/height) is larger with net6+, not sure why yet
		-->
		<UseWindowsForms>true</UseWindowsForms>
		<BuiltInComInteropSupport>true</BuiltInComInteropSupport>
		<ImportWindowsDesktopTargets>true</ImportWindowsDesktopTargets>
		<ApplicationHighDpiMode>true</ApplicationHighDpiMode>
		<!--<ApplicationDefaultFont></ApplicationDefaultFont>-->

		<PlatformTarget>x64</PlatformTarget>
		<Platforms>AnyCPU;x64;x86</Platforms>
		<Configurations>Debug;Release;Release_testing</Configurations>
		<Prefer32Bit>false</Prefer32Bit>

		<Deterministic>true</Deterministic>
		<GenerateAssemblyInfo>true</GenerateAssemblyInfo>
		<DisableWinExeOutputInference>true</DisableWinExeOutputInference>
		<IsPackable>false</IsPackable>

		<StartupObject>OsuDiffCalc.Program</StartupObject>
		<ApplicationManifest>Properties\app.manifest</ApplicationManifest>
  </PropertyGroup>
	
	<Choose>
		<When Condition=" '$(TargetFramework)'=='net481' Or '$(TargetFramework)'=='net48'
					Or '$(TargetFramework)'=='net472' Or '$(TargetFramework)'=='net471' Or '$(TargetFramework)'=='net470' Or '$(TargetFramework)'=='net47' 
					Or '$(TargetFramework)'=='net462' Or '$(TargetFramework)'=='net461' Or '$(TargetFramework)'=='net460' Or '$(TargetFramework)'=='net46'
					Or '$(TargetFramework)'=='net452' Or '$(TargetFramework)'=='net451' Or '$(TargetFramework)'=='net450' Or '$(TargetFramework)'=='net45'
					Or '$(TargetFramework)'=='net403' Or '$(TargetFramework)'=='net40' ">
			<PropertyGroup>
				<IsNetFramework>true</IsNetFramework>
			</PropertyGroup>
		</When>
		<Otherwise>
			<PropertyGroup>
				<IsNetFramework>false</IsNetFramework>
			</PropertyGroup>
		</Otherwise>
	</Choose>

	<!-- trimming for .NET 5+ -->
	<!-- see https://docs.microsoft.com/en-us/dotnet/core/deploying/trimming/trimming-options?pivots=dotnet-6-0 -->
	<PropertyGroup Condition=" '$(IsNetFramework)' != 'true' ">
		<IsTrimmable>true</IsTrimmable>
		<PublishTrimmed>true</PublishTrimmed>
		<EnableTrimAnalyzer>true</EnableTrimAnalyzer>
		<_SuppressWinFormsTrimError>true</_SuppressWinFormsTrimError>
		<TrimmerRemoveSymbols>true</TrimmerRemoveSymbols>
		<TrimMode>link</TrimMode>
		<TrimmerDefaultAction>link</TrimmerDefaultAction>
	</PropertyGroup>
	<Choose>
		<When Condition=" '$(PublishTrimmed)' == 'true' And '$(IsTrimmable)' == 'true' And '$(Configuration)' == 'Release' And '$(IsNetFramework)' != 'true' ">
			<ItemGroup>
				<!-- exclude assemblies from trimming (poorly named) -->
				<!-- definitely required to support TrimMode=link, otherwise you get System.MissingMethodException on WinForms charts -->
				<TrimmerRootAssembly Include="System.Windows.Forms.DataVisualization" />
				<!-- may be required to support TrimMode=link, otherwise you get System.MissingMethodException -->
				<TrimmerRootAssembly Include="System.Configuration.ConfigurationManager" />
				<!--<TrimmerRootAssembly Include="System.Windows.Forms" />
				<TrimmerRootAssembly Include="System.Windows.Forms.Design" />
				<TrimmerRootAssembly Include="System.Windows.Forms.Primitives" />
				<TrimmerRootAssembly Include="System.Data.SqlClient" />-->
			</ItemGroup>
			<PropertyGroup>
				<DebuggerSupport>false</DebuggerSupport>
				<!--
				<MetadataUpdaterSupport>false</MetadataUpdaterSupport>
				<EnableUnsafeUTF7Encoding>false</EnableUnsafeUTF7Encoding>
				<InvariantGlobalization>true</InvariantGlobalization>
		
				<UseNativeHttpHandler>true</UseNativeHttpHandler>
				<AutoreleasePoolSupport>false</AutoreleasePoolSupport>
				<EnableUnsafeBinaryFormatterSerialization>false</EnableUnsafeBinaryFormatterSerialization>
				<HttpActivityPropagationSupport>false</HttpActivityPropagationSupport>
				<UseSystemResourceKeys>false</UseSystemResourceKeys>
				
				<IlcOptimizationPreference>Size</IlcOptimizationPreference>
				<IlcFoldIdenticalMethodBodies>true</IlcFoldIdenticalMethodBodies>
				-->
			</PropertyGroup>
		</When>
	</Choose>

	<PropertyGroup>
		<DefineConstants>$(DefineConstants);TRACE</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Debug' ">
		<DefineConstants>$(DefineConstants);DEBUG</DefineConstants>
		<Optimize>false</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Release' ">
		<DefineConstants>$(DefineConstants);RELEASE</DefineConstants>
		<Optimize>true</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)' == 'Release_testing' ">
		<DefineConstants>$(DefineConstants);RELEASE_TESTING</DefineConstants>
		<Optimize>true</Optimize>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Platform)' == 'AnyCPU' ">
		<DefineConstants>$(DefineConstants);AnyCPU</DefineConstants>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Platform)' == 'x86' ">
		<DefineConstants>$(DefineConstants);X86</DefineConstants>
		<PlatformTarget>x86</PlatformTarget>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Platform)' == 'x64' ">
		<DefineConstants>$(DefineConstants);X64</DefineConstants>
		<PlatformTarget>x64</PlatformTarget>
	</PropertyGroup>


	<!-- File include/exclude -->
	<ItemGroup>
		<Content Include="TODO.txt" CopyToOutputDirectory="Never" />
	</ItemGroup>

	<ItemGroup>
		<Compile Update="Properties\Settings.Designer.cs">
			<DesignTimeSharedInput>True</DesignTimeSharedInput>
			<AutoGen>True</AutoGen>
			<DependentUpon>Settings.settings</DependentUpon>
		</Compile>
	</ItemGroup>

	<ItemGroup>
		<None Update="Properties\Settings.settings">
			<Generator>PublicSettingsSingleFileGenerator</Generator>
			<LastGenOutput>Settings.Designer.cs</LastGenOutput>
		</None>
	</ItemGroup>

	<!-- These libs are to add other modern features to dotnet framework, it is not useful in modern dotnet -->
	<ItemGroup Condition=" '$(IsNetFramework)' == 'true' ">
		<PackageReference Include="IndexRange" Version="1.0.2" />
		<!--<PackageReference Include="System.Memory" Version="4.5.5" />-->
	</ItemGroup>

	<!-- shim to enable trimming for WinForms apps -->
	<PropertyGroup Condition=" '$(PublishTrimmed)' == 'true' ">
		<DefineConstants>$(DefineConstants);PUBLISH_TRIMMED</DefineConstants>
	</PropertyGroup>
	<Choose>
		<When Condition=" '$(PublishTrimmed)' == 'true' And '$(IsNetFramework)' != 'true' ">
			<ItemGroup>
				<PackageReference Include="WinFormsComInterop" Version="0.3.0" />
				<!-- hack to support AOT in .net6 (but turn off single-file in publish) -->
				<!--<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.0-preview.6.22324.4" />--> 
				<!--<PackageReference Include="Microsoft.DotNet.ILCompiler" Version="7.0.0-rc.1.22426.10" />--> 
			</ItemGroup>
		</When>
	</Choose>

	<!-- assembly merging for dotnet framework builds -->
	<ItemGroup Condition=" '$(IsNetFramework)' == 'true' ">
		<PackageReference Include="ILRepack" Version="2.0.18" PrivateAssets="all" />
	</ItemGroup>

	<!-- helpers for compatibility -->
	<ItemGroup>
		<PackageReference Include="Microsoft.DotNet.UpgradeAssistant.Extensions.Default.Analyzers" Version="0.4.346202" PrivateAssets="all" />
	</ItemGroup>
	<ItemGroup Condition=" '$(IsNetFramework)' == 'true' ">
		<Reference Include="System" />
		<Reference Include="System.Configuration" />
		<Reference Include="System.Core" />
		<Reference Include="System.Drawing" />
		<Reference Include="System.EnterpriseServices" />
		<Reference Include="System.Windows.Forms" />
		<Reference Include="System.Xml" />
		<Reference Include="System.Xml.Linq" />
	</ItemGroup>
	
	<!-- helper to parse Windows shortcut files (.lnk) -->
	<ItemGroup>
	  <PackageReference Include="securifybv.ShellLink" Version="0.1.0" />
	</ItemGroup>
	
	<!-- nuget defaults to the oldest, buggiest version of any given transitive dependency if it is supported
	     here we specify more recent versions to avoid this. -->
	<ItemGroup>
		<PackageReference Include="Microsoft.CSharp" Version="4.7.0" />
		<PackageReference Include="Microsoft.Bcl.AsyncInterfaces" Version="6.0.0" />
		<PackageReference Include="System.Configuration.ConfigurationManager" Version="6.0.1" />
		<PackageReference Include="System.Memory" Version="4.5.5" />
		<PackageReference Include="System.Memory.Data" Version="6.0.0" />
		<PackageReference Include="System.Runtime" Version="4.3.1" />
		<PackageReference Include="System.Text.Json" Version="6.0.6" />
	</ItemGroup>

	<!-- WinForms charting -->
	<ItemGroup Condition=" '$(IsNetFramework)' == 'true' ">
		<Reference Include="System.Windows.Forms.DataVisualization" />
		<Reference Include="System.Windows.Forms.DataVisualization.Design" />
	</ItemGroup>
	<ItemGroup Condition=" '$(IsNetFramework)' != 'true' ">
		<!-- one of the following blocks is required for WinForms Charts -->
		
		<!--<PackageReference Include="System.Data.SqlClient" Version="4.8.3" />
		<PackageReference Include="System.Windows.Forms.DataVisualization" Version="1.0.0-prerelease.20110.1" />-->

		<PackageReference Include="Microsoft.Data.SqlClient" Version="5.0.1" />
		<PackageReference Include="HIC.System.Windows.Forms.DataVisualization" Version="1.0.1" />
	</ItemGroup>

	<!-- build / publish events -->
	<Target Name="RemoveOldPublishFiles" BeforeTargets="Publish;BeforePublish;AfterBuild;AfterCompile;PostBuildEvent;PostBuild" Condition=" '$(PublishDir)' != '' And Exists('$(PublishDir)') ">
		<ItemGroup Condition=" '$(PublishDir)' != '' ">
			<PrePublishDirsToDelete Remove="@(PrePublishDirsToDelete)" />
			<PrePublishDirsToDelete Include="$([System.IO.Directory]::GetDirectories('$(PublishDir)', '*', System.IO.SearchOption.AllDirectories))" />

			<PrePublishFilesToDelete Remove="@(PrePublishFilesToDelete)" />
			<PrePublishFilesToDelete Include="$(PublishDir)**\*.*" />
			<PrePublishFilesToDelete Remove="@(PrePublishDirsToDelete)" />
		</ItemGroup>
		<Delete Files="@(PrePublishFilesToDelete)" />
		<RemoveDir Directories="@(PrePublishDirsToDelete)" />
	</Target>

	<!--
	https://docs.microsoft.com/en-us/visualstudio/msbuild/msbuild-items?view=vs-2022
	
	-->

	<!-- assembly merging into 1 exe for dotnet framework -->
	<Target Name="MergeAssembliesForDotnetFramework" AfterTargets="Publish" Condition=" '$(IsNetFramework)' == 'true' And  '$(PublishDir)' != '' And Exists('$(PublishDir)') ">
		<Message Importance="high" Text="PublishDir: '$(PublishDir)', TargetName: '$(TargetName)', ..." />
		<ItemGroup>
			<Libs Remove="@(Libs)" />
			<Libs Include="$(PublishDir)*.dll" />
			<Libs Include="$(PublishDir)*.exe" Exclude="$(PublishDir)$(TargetName).exe" />

			<FilesToDelete Remove="@(FilesToDelete)" />
			<FilesToDelete Include="$(PublishDir)*.xml" />
			<FilesToDelete Include="$(PublishDir)**\*.pdb" />
			<FilesToDelete Include="$(PublishDir)*.settings" />
			<FilesToDelete Remove="@(Libs)" />
		</ItemGroup>
		<Delete Files="@(FilesToDelete)" />

		<Exec Command="$(PkgILRepack)\tools\ILRepack.exe /out:&quot;$(TargetName).exe&quot; &quot;$(TargetName).exe&quot; @(Libs->'&quot;%(filename)%(extension)&quot;', ' ')" WorkingDirectory="$(ProjectDir)\$(PublishDir)" ConsoleToMsBuild="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Delete Files="@(Libs)" />
	</Target>

	<Target Name="CleanPublishDir" AfterTargets="Publish;MergeAssemblies" Condition=" '$(PublishDir)' != '' And Exists('$(PublishDir)') ">
		<ItemGroup>
			<FilesToDelete Remove="@(FilesToDelete)" />
			<FilesToDelete Include="$(PublishDir)*.xml" />
			<FilesToDelete Include="$(PublishDir)**\*.pdb" />
			<FilesToDelete Include="$(PublishDir)**\*.dll.config" />
			<FilesToDelete Include="$(PublishDir)**\*.exe.config" />
			<FilesToDelete Include="$(PublishDir)*.settings" />
		</ItemGroup>
		<Delete Files="@(FilesToDelete)" />
		
		<!-- remove all "empty" directories -->
		<ItemGroup>
			<Dirs Remove="@(Dirs)" />
			<Dirs Include="$([System.IO.Directory]::GetDirectories('$(PublishDir)', '*', System.IO.SearchOption.AllDirectories))" />
			<Dirs>
				<!--<DirFiles Remove="@(DirFiles)" />-->
				<DirFiles>$([System.IO.Directory]::GetFiles("%(Dirs.Identity)", "*", System.IO.SearchOption.AllDirectories).get_Length())</DirFiles>
			</Dirs>
		</ItemGroup>
		<RemoveDir Directories="@(Dirs)" Condition="%(DirFiles)=='0'" />

		<Message Text="=============================" Importance="High" />
		<Message Text="Finished building publish assembly: $(PublishDir)$(AssemblyName).exe" Importance="High" />
	</Target>
</Project>